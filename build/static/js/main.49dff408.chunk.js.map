{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["todoItems","id","title","description","completed","App","props","displayCompleted","status","setState","viewCompleted","renderTabList","className","state","onClick","renderItems","todoList","filter","item","map","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAY,CAChB,CACEC,GAAI,EACJC,MAAO,eACPC,YAAa,oCACbC,WAAW,GAEb,CACEH,GAAI,EACJC,MAAO,QACPC,YAAa,0DACbC,WAAW,GAEb,CACEH,GAAI,EACJC,MAAO,gBACPC,YAAa,wCACbC,WAAW,GAEb,CACEH,GAAI,EACJC,MAAO,UACPC,YAAa,gDACbC,WAAW,IAqGAC,E,kDAhGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,iBAAmB,SAACC,GAClB,OAAIA,EACK,EAAKC,SAAS,CAAEC,eAAe,IAGjC,EAAKD,SAAS,CAAEC,eAAe,KAbrB,EAgBnBC,cAAgB,WACd,OACE,sBAAKC,UAAU,eAAf,UACE,sBACEA,UAAW,EAAKC,MAAMH,cAAgB,kBAAoB,WAC1DI,QAAS,kBAAM,EAAKP,kBAAiB,IAFvC,sBAMA,sBACEK,UAAW,EAAKC,MAAMH,cAAgB,WAAa,kBACnDI,QAAS,kBAAM,EAAKP,kBAAiB,IAFvC,4BAzBa,EAmCnBQ,YAAc,WAAO,IACXL,EAAkB,EAAKG,MAAvBH,cAKR,OAJiB,EAAKG,MAAMG,SAASC,QACnC,SAACC,GAAD,OAAUA,EAAKd,WAAaM,KAGdS,KAAI,SAACD,GAAD,OAClB,qBAEEN,UAAU,oEAFZ,UAIE,sBACEA,UAAS,0BACP,EAAKC,MAAMH,cAAgB,iBAAmB,IAEhDR,MAAOgB,EAAKf,YAJd,SAMGe,EAAKhB,QAER,iCACE,wBACEU,UAAU,yBADZ,kBAKA,wBACEA,UAAU,iBADZ,yBAjBGM,EAAKjB,QAzCd,EAAKY,MAAQ,CACXH,eAAe,EACfM,SAAUhB,GAJK,E,0CAsEnB,WACE,OACE,uBAAMY,UAAU,YAAhB,UACE,oBAAIA,UAAU,6CAAd,sBACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,OAAf,SACE,wBACEA,UAAU,kBADZ,wBAMDQ,KAAKT,gBACN,oBAAIC,UAAU,2CAAd,SACGQ,KAAKL,8B,GAvFJM,aCjBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.49dff408.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst todoItems = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true,\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for the upcoming test\",\n    completed: false,\n  },\n  {\n    id: 3,\n    title: \"Sammy's books\",\n    description: \"Go to library to return Sammy's books\",\n    completed: true,\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use Django with React\",\n    completed: false,\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems,\n    };\n  }\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return (\n      <div className=\"nav nav-tabs\">\n        <span\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\n          onClick={() => this.displayCompleted(true)}\n        >\n          Complete\n        </span>\n        <span\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\n          onClick={() => this.displayCompleted(false)}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      (item) => item.completed == viewCompleted\n    );\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            className=\"btn btn-secondary mr-2\"\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n                <button\n                  className=\"btn btn-primary\"\n                >\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush border-top-0\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}